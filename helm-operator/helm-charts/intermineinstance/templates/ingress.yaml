{{- if .Values.ingress.enabled -}}
{{- $fullName := include "intermineinstance.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{/*
When Helm operator updates Helm to 3.7+ we can use the below instead.
See: _helpers.tpl:call-nested
*/}}
{{/* - $imService := include "common.names.fullname" .Subcharts.tomcat - */}}
{{- $imService := include "call-nested" (list . "tomcat" "common.names.fullname") -}}
{{- $imServicePort := .Values.tomcat.service.port -}}
{{- $mine := .Values.bluegenes.mineNamespace -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.hostname | quote }}
      http:
        paths:
          - path: /
            {{- if (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          - path: /{{ $mine }}/service
            {{- if (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $imService }}
                port:
                  number: {{ $imServicePort }}
              {{- else }}
              serviceName: {{ $imService }}
              servicePort: {{ $imServicePort }}
              {{- end }}
          - path: /{{ $mine }}/model
            {{- if (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $imService }}
                port:
                  number: {{ $imServicePort }}
              {{- else }}
              serviceName: {{ $imService }}
              servicePort: {{ $imServicePort }}
              {{- end }}
          - path: /{{ $mine }}/run.do
            {{- if (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $imService }}
                port:
                  number: {{ $imServicePort }}
              {{- else }}
              serviceName: {{ $imService }}
              servicePort: {{ $imServicePort }}
              {{- end }}
          - path: /{resource:[A-z0-9\-]+\.(xml|txt)}
            {{- if (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: Exact
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $imService }}
                port:
                  number: {{ $imServicePort }}
              {{- else }}
              serviceName: {{ $imService }}
              servicePort: {{ $imServicePort }}
              {{- end }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- else if .Capabilities.APIVersions.Has "route.openshift.io/v1/Route" -}}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  host: {{ .Values.ingress.hostname | quote }}
  path: "/"
  port:
    targetPort: {{ $svcPort }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ $fullName }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  host: {{ .Values.ingress.hostname | quote }}
  path: /{{ $mine }}/service
  port:
    targetPort: {{ $imServicePort }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ $imService }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  host: {{ .Values.ingress.hostname | quote }}
  path: /{{ $mine }}/model
  port:
    targetPort: {{ $imServicePort }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ $imService }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  host: {{ .Values.ingress.hostname | quote }}
  path: /{{ $mine }}/run.do
  port:
    targetPort: {{ $imServicePort }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ $imService }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "intermineinstance.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  host: {{ .Values.ingress.hostname | quote }}
  path: /{resource:[A-z0-9\-]+\.(xml|txt)}
  port:
    targetPort: {{ $imServicePort }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ $imService }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
{{- end }}
{{- end }}