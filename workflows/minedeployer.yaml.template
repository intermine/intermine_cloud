# This workflow is a Jinja template, so it needs variables to be
# injected before you can submit it.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: deploy-a-mine
spec:
  entrypoint: deploy-mine
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Mi
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
  - metadata:
      name: solr-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
  templates:
  - name: deploy-mine
    steps:
    - - name: get-artifacts
        template: getter

    - - name: start-services
        resource:
          action: create
          manifest: |
            apiVersion: intermine.intermine.org/v1alpha1
            kind: IntermineInstance
            metadata:
              name: {% raw %}"mine-{{workflow.uid}}-instance"{% endraw %}
            spec:
              postgresql:
                fullnameOverride: {% raw %}"mine-{{workflow.uid}}-postgres"{% endraw %}
                persistence:
                  existingClaim: postgres-data
              solr:
                fullnameOverride: {% raw %}"mine-{{workflow.uid}}-solr"{% endraw %}
                persistence:
                  existingClaim: solr-data
              tomcat:
                fullnameOverride: {% raw %}"mine-{{workflow.uid}}-tomcat"{% endraw %}

    - - name: prepare-deploy
        template: prebuilder
        arguments:
          parameters:
          - name: postgres-host
            value: {% raw %}"mine-{{workflow.uid}}-postgres"{% endraw %}
          - name: solr-host
            value: {% raw %}"mine-{{workflow.uid}}-solr"{% endraw %}
          - name: tomcat-host
            value: {% raw %}"mine-{{workflow.uid}}-tomcat"{% endraw %}

    # TODO don't move onto the next step until tomcat is running
    # https://github.com/argoproj/argo-workflows/blob/master/examples/README.md#sidecars

    - - name: deploy
        template: builder
        arguments:
          parameters:
          - name: task
            value: cargoDeployRemote

  - name: getter
    inputs:
      artifacts:
      - name: minedir
        path: /home/intermine/{{ mine_name }}
        s3:
          key: {{ minedir_path }}
      - name: postgres-data
        path: /postgres/data
        s3:
          key: {{ postgresdump_path }}
      - name: solr-data
        path: /solr/solr
        s3:
          key: {{  solrdump_path }}
    container:
      image: alpine:3.8
      volumeMounts:
      - name: workdir
        mountPath: /home/intermine
      - name: postgres-data
        mountPath: /postgres
      - name: solr-data
        mountPath: /solr
  - name: prebuilder
    inputs:
      parameters:
      - name: postgres-host
      - name: solr-host
      - name: tomcat-host
    container:
      image: intermine/prebuild:latest
      command: ["builder_prepare"]
      args: ["--mine-path", "/home/intermine/{{ mine_name }}"]
      # TODO support property overrides in a way secrets aren't visible
      env:
      - name: PGHOST
        value: {% raw %}"{{inputs.parameters.postgres-host}}"{% endraw %}
      - name: SOLR_HOST
        value: {% raw %}"{{inputs.parameters.solr-host}}"{% endraw %}
      - name: TOMCAT_HOST
        value: {% raw %}"{{inputs.parameters.tomcat-host}}"{% endraw %}
      volumeMounts:
      - name: workdir
        mountPath: /home/intermine
  - name: builder
    inputs:
      parameters:
      - name: task
    container:
      image: intermine/build:latest
      workingDir: /home/intermine/{{ mine_name }}
      command: [sh, -c]
      args: {% raw %}["./gradlew {{inputs.parameters.task}}"]{% endraw %}
      resources:
        requests:
          memory: 4Gi
          cpu: 500m
      volumeMounts:
      - name: workdir
        mountPath: /home/intermine
